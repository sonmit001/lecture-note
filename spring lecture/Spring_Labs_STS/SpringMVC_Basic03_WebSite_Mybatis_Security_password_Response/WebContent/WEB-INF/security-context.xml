<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:security="http://www.springframework.org/schema/security"
 xsi:schemaLocation="http://www.springframework.org/schema/beans 
                     http://www.springframework.org/schema/beans/spring-beans.xsd
                     http://www.springframework.org/schema/security 
                     http://www.springframework.org/schema/security/spring-security.xsd">

<!-- controller처리를 자동으로
/login , /logout 처리는 하지 않는다. (spring 설정이다.) 

사용자가 /login , /logout 처리를 직접 처리 가능하다.-->
 <!-- <security:http>
  <security:csrf disabled="true"/>
  <security:form-login login-page="/joinus/login.htm" authentication-failure-url="/joinus/login.htm?error"/>
  
  <security:logout logout-success-url="/index.htm" /> 
  <security:intercept-url pattern="/customer/noticeDetail.htm" access="hasRole('ROLE_USER')"/>
  <security:intercept-url pattern="/customer/noticeReg.htm" access="hasRole('ROLE_ADMIN')"/>
</security:http>

<security:authentication-manager>
     <security:authentication-provider>
      <security:user-service>
       <security:user name="kglim" password="1004" authorities="ROLE_USER"/>
       <security:user name="admin" password="1004" authorities="ROLE_ADMIN,ROLE_USER"/>
      </security:user-service>
     </security:authentication-provider>
 </security:authentication-manager>  -->
	 <security:http>
	  <security:csrf disabled="true"/>
	  <security:form-login login-page="/joinus/login.htm" authentication-failure-url="/joinus/login.htm?error"/>
	  <security:form-login login-page="/joinus/memberupdate.htm" authentication-failure-url="/joinus/memberupdate.htm?error"/>
	  <security:logout logout-success-url="/index.htm" /> 
	  <security:intercept-url pattern="/joinus/memberupdate.htm" access="hasRole('ROLE_USER')"/>
	  
	  <security:intercept-url pattern="/customer/*Reg.htm" access="hasRole('ROLE_USER')"/>
	  <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
	  
	</security:http>
	
	<security:authentication-manager>
		<security:authentication-provider> <!-- DB연결 하는 곳이므로 bean객체 id넣는다. -->
			<security:jdbc-user-service 
			data-source-ref="driverManagerDataSource"
			users-by-username-query="SELECT USERID  ,  pwd AS PASSWORD ,  1 enabled FROM member WHERE userid= ?"
			authorities-by-username-query="select m.userid, r.ROLE_NAME from member m JOIN roll r on m.userid = r.userid where m.userid=?"/>
			<security:password-encoder ref="bCryptPasswordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
