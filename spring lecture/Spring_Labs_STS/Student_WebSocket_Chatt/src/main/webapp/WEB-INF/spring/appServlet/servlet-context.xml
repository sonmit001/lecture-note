<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
			 xmlns:beans="http://www.springframework.org/schema/beans"
			 xmlns:websocket="http://www.springframework.org/schema/websocket"
			 xmlns:context="http://www.springframework.org/schema/context"
			 xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
 								 http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
								 http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd
								 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Enables the Spring MVC @Controller programming model -->
	<context:annotation-config />
	<default-servlet-handler />
	<annotation-driven />
	<context:component-scan base-package="controller" />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Tiles -->
 	<beans:bean id="tilesconfiguer"	class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/Tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- ViewResolver -->
	<beans:bean id="urlBasedViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>
	
	<beans:bean id="chatWebSocketHandler" class="service.ChatWebSocketHandler" />
	<beans:bean id="chatService" class="service.ChatService" />
	<websocket:handlers>
		<websocket:mapping handler="chatWebSocketHandler" path="/chat.sockjs" />
		<websocket:sockjs />
	</websocket:handlers>
</beans:beans>
