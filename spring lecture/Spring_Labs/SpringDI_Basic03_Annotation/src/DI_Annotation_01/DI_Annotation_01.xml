<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd">
<!--  
	IOC 컨테이너 (Spring 전용 메모리) 안에 생성될 [객체 만들고 조립(의존) 설정] 파일
	:제어의 역전 (프로그램을 제어구조 바꿘다)

    MonitorViewer viewer = new MonitorViewer();
	Recorder recorder = new Recorder();
	viewer.setRecorder(recorder); 
-->
<!-- 1단계 :xml 설정파일 기반의 DI 작업  -->
<!--
	<bean id="viewer" class="DI_Annotation_01.MonitorViewer">
		<property name="recorder">
			<ref bean="recorder" />
		</property>
	</bean>
	<bean id="recorder" class="DI_Annotation_01.Recorder"></bean>
-->

<!-- 2단계 :Annotation 기반으로  DI 작업(Java 제공 : Annotation, SpringFramework 제공:Annotation )  
@Autowired (자동 주입  > By Type)
목적 : 의존관계를 자동설정할 때 사용하며 [타입]을 이용하여 의존하는 [객체를 삽입]해 준다. 
          그러므로 [해당 타입의 빈객체]가 존재(IOC)하지 않거나 또는 [2개 이상 존재할 경우 스프링]은 예외를 발생시키게 된다.
설정 위치 : 생성자, 필드, 메소드(굳이 setter메소드가 아니여도 된다)


추가설정 :
1.import org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor;  
2.IOC 컨테이너 안에 bean 객체로  생성[AutowiredAnnotationBeanPostProcessor]되어 있어야 @Autowired 동작 한다
3.매번  Annotation 적용을 위해서 필요한 bean 등록 하는 작업을 하면 너무 힘들어요 ㅠㅠ
4. <context:annotation-config /> Annotation 에 필요한  bean 들이 자동 등록 된다 (단점:사용하지 않는 것도 등록)
               
옵션 : required - @Autowired어노테이션을 적용한 프로퍼티에 대해 굳이 설정할 필요가 없는 경우에 
     false값을 주며 이때 해당 프로퍼티가 존재하지 않더라도 스프링은 예외를 발생시키지 않는다. 디폴트값은 true
     
설정하기 ^^     
import org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor;  
AutowiredAnnotationBeanPostProcessor > 컨테이너안에 객체로 생성되어 있어야   @Autowired 를 통한 자동 주입 실행된다 


**@Autowired 적용되기 전제 조건
1. IOC 컨테이너 안에 @Autowired 적용을 위한 타입 객체 생성되어 있어야 한다
2. AutowiredAnnotationBeanPostProcessor 빈객체로 등록 되어 있어야 한다.
3. 빈객체 등록 하는 되신 xml 상단에   <context:annotation-config /> 통해서 빈객체 자동 생성 


**@Autowired 적용되지 않는 경우 (By Type)
1. injection 되는 같은 타입의 bean IOC컨테이너 없는 경우 (exception 발생)
2. injection 되는 [타입] 여러개가 있는 경우 (exception 발생)
  <bean id="xx" class="DI_Annotation_01.Recorder"></bean> 	
  <bean id="yy" class="DI_Annotation_01.Recorder"></bean> 
3.예외적으로 같은 타입의 bean 이 여러개 있다 하더라도 
  public void RecordMethod(Recorder rec) > parameter 이름이 
  bean id 값 하고 같으면 알아서 injection
  원칙적인 방법은 아니고 > @Resource 를 사용해야 합니다 ^^
  <bean id="xx" class="DI_Annotation_01.Recorder"></bean> 	
  <bean id="yy" class="DI_Annotation_01.Recorder"></bean> 
  <bean id="rec" class="DI_Annotation_01.Recorder"></bean>
-->
    <context:annotation-config />
	<bean id="viewer" class="DI_Annotation_01.MonitorViewer"></bean>
	<bean id="recorder" class="DI_Annotation_01.Recorder"></bean>
    <!-- <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"></bean> -->
</beans>




