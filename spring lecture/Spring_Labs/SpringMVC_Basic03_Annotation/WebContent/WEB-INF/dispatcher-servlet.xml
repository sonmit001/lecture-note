<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd">
<!-- 자동 주입 
	의존관계(생성자,setter)자동 주입
	xml에서 안하고 >> @Autowired @Resource처리
-->
<context:annotation-config/>
<bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/views/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
</bean>
<!-- Test_1 
@Component, @Repository, 
@Service, @Controller, 
@RestController, @ControllerAdvice, 
 and @Configuration
 있는 클래스를 자동으로 bean객체 생성 가능
-->
<!-- <context:component-scan base-package="com.controller"/> -->
<bean id = "helloController" class="com.controller.HelloController"></bean>


<!-- Test_2 (하나의 요청 주소 : GET , POST 처리)
	화면단,처리단을 가지는 구조에서 ex) 로그인, 글쓰기 화면 / 처리
	전제조건은 요청주소가 같아야 한다.  
	@Autowired > ArticleService이다.
-->
<bean class="com.controller.NewArticleController"></bean>
<bean class="com.service.ArticleService"></bean>

<!-- Test_3 설정 (하나의 요청 주소 : GET , POST 처리)
	List 다루기
-->
<bean class="com.controller.OrderController"></bean>

<!-- TESt_4 설정 parameter 값받기 @RequestParam 활용하기 -->
<bean class="com.controller.SearchController"/>

<!-- TEST_5 Cookie 사용하기 @Cookievalue -->
<bean class="com.controller.CookieController"/>

<!-- TEST_6
import org.springframework.web.multipart.commons.CommonsMultipartResolver;
CommonsMultipartFile 을 사용하기 위하서는 반드시 CommonsMultipartResolver 빈 객체 IOC 컨테이너 안에 있어야 한다
CommonsMultipartResolver : Upload 파일 정보를 관리 (파일 크기 ....)
의존객체 :org.apache.commons.fileupload 
파일작업 : com.springsource.org.apache.commons.io

-->
<bean class="com.controller.ImageController"/>

<!-- id 어떤 이름 하라고 정해짐 : multipartResolver -->
<bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
    <property name="maxUploadSize" value="10485760"/>
</bean>



</beans>

