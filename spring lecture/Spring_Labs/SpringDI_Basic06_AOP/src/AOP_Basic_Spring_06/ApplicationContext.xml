<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd">
<!--  
	IOC 컨테이너 (Spring 전용 메모리) 안에 생성될 [객체 만들고 조립(의존) 설정] 파일
	:제어의 역전 (프로그램을 제어구조 바꿘다)

    1.Calc calc = new NewCalc();
    
    2.Calc cal =(Calc)Proxy.newProxyInstance(calc.getClass().getClassLoader(), //실제 클래스 메타 정보
				               calc.getClass().getInterfaces(), //행위정보 (인터페이스)
				               new LogPrintHandler(calc)); //핸들러(보조관심) >> 실객체 주소(생성자)
    
    >>import org.springframework.aop.framework.ProxyFactoryBean;
           을 통해서  Proxy 객체 생성 
    
    3.LogPrintAroundAdvice 객체 생성(bean)
    
    4.LogPrintBeforeAdvice 객체 생성(bean)
    
    5.LogPrintAfterAdvice 객체 생성(bean)
    
    
        하나의 함수가 실행될때 여러가지 보조업무(Advice) 실행 가능

joinpoint > pointcut 개념을 사용해서 객체가 가지는
[특정 함수] 만 제한적으로 보조관심(공통모듈)을 적용하고 싶어요

문제점 ) AOP_Basic_Spring_05번까지는 객체가 가지는 모든 함수가
      advice  적용
          해결: 특정함수 pointcut   사용
       
import org.springframework.aop.support.NameMatchMethodPointcut;
import org.springframework.aop.support.DefaultPointcutAdvisor;

-->
<bean id="calc" class="AOP_Basic_Spring_06.NewCalc"></bean> 
<bean id="logPrintAroundAdvice" class="AOP_Basic_Spring_06.LogPrintAroundAdvice"></bean> 
<bean id="logPrintBeforeAdvice" class="AOP_Basic_Spring_06.LogPrintBeforeAdvice"></bean>
<bean id="logPrintAfterAdvice" class="AOP_Basic_Spring_06.LogPrintAfterAdvice"></bean>


<!-- 1단계 --> 
<bean id="nameMatchMethodPointcut" class="org.springframework.aop.support.NameMatchMethodPointcut">
	<property name="mappedNames">
		<list>
			<value>ADD</value>
			<value>MUL</value>
		</list>
	</property>
</bean>

<!-- 2단계 : Pointcut  적용될 advice 설정  -->
<bean id="defaultPointcutAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
	<property name="pointcut" ref="nameMatchMethodPointcut"></property>
	<property name="advice" ref="logPrintAroundAdvice"></property>
</bean>


<!-- 3단계 -->
<bean id="proxy" class="org.springframework.aop.framework.ProxyFactoryBean">
	<property name="proxyInterfaces">
		<list>
			<value>AOP_Basic_Spring_06.Calc</value><!-- 인터페이스를 통해서 행위 정보  -->
		</list>
	</property>
	<property name="target" ref="calc"></property><!-- 실객체 정보 -->
	<property name="interceptorNames"> <!-- handler 정보(Advice) -->
		<list>
			<!-- 	
			<value>logPrintAroundAdvice</value>
			<value>logPrintBeforeAdvice</value> 
			<value>logPrintAfterAdvice</value>
			 -->
			<value>defaultPointcutAdvisor</value>
		</list>
	</property>
</bean>

</beans>


